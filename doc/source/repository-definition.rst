Build format
============

Installer repositories are compiled by using ``kcl build``. This requires an Xml file that describes how to build a file repository. Here's an example repository file:

.. code-block:: xml

    <?xml version="1.0" ?>
    <FileRepository>
    	<Package>
    		<Type>Packed</Type>
    	</Package>
    	<FileSets>
    		<FileSet Id="5d195f63-f424-431f-b7c5-8d57cd32f57b" Name="CoreApplication">
    			<File Source="application.exe" />
    		</FileSet>
    		<FileSet Id="c8bed51b-cbba-4699-953a-834930704d89" Name="Plugins">
    			<File Source="plugin1.dll" />
        		<File Source="plugin2.dll" />
    		</FileSet>
    	</FileSets>
    </FileRepository>

Reference
---------

* ``FileRepository`` is the top-level node and must be present in every repository definition.
* ``Package`` describes this package

  * ``Type`` must be specified and one of ``Loose`` or ``Packed``.

* ``FileSets`` describes all file sets stored in this package.

  * ``FileSet`` describes the files stored within a file set. All files across *all* file sets must have a unique path. Each file set id must be unique within one file repository.

There's also a couple of optional elements:

* ``SourcePackages`` within ``FileRepository``. This can be used only for ``Packed`` repository. In this case, file sets can be assigned to source packages as following:

  .. code-block:: xml

    <SourcePackages>
      <SourcePackage Name="binaries" Id="BinariesPackage">
      <SourcePackage Name="plugins" Id="PluginsPackage">
    </SourcePackages>
    <FileSet SourcePackageId="BinariesPackage" Id="5d195f63-f424-431f-b7c5-8d57cd32f57b" Name="CoreApplication">
      <!-- as above -->
    </FileSet>
    <FileSet SourcePackageId="PluginsPackage" Id="c8bed51b-cbba-4699-953a-834930704d89" Name="Plugins">
      <!-- as above -->
    </FileSet>

  In this case, all files from one file set will end up in a single package. If no source packages are defined, or no package is assigned to a file set, they will be put into the ``main`` package. The ``main`` package will be autogenerated if it's not present in the list of packages.

  .. note::

      If two files with the same contents are in separate file sets and separate source packages, the contents of the files will be duplicated.
